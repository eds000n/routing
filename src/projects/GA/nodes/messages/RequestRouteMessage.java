package projects.GA.nodes.messages;

import java.util.ArrayList;

import sinalgo.nodes.messages.Message;

/**
 * This message is generated by a node that detects an event.
 * Before sending its gathered data it requests for a route
 * to the sink. The node waits for a preset time and then it
 * sends its data using the nextHopToSink field. The sink
 * generates the message SetRouteMessage to set the route.
 * @author edson
 *
 */
public class RequestRouteMessage extends Message{
	private int SenderID;
	private int RequesterID;			// 1-indexed
	private ArrayList<Integer> path;	//Shortest path to sink, just used the first time when there is no solution, then it is used  
										//the shortest path to the tree which is computed by the sink.
	
	public ArrayList<Integer> getPath() {
		return path;
	}

	public RequestRouteMessage(int requester){
//		this.SenderID = sender;
		this.RequesterID = requester;
		path = new ArrayList<Integer>();
//		path.add(RequesterID);
	}
	
	@Override
	public Message clone() {
//		RequestRouteMessage m = new RequestRouteMessage(SenderID, RequesterID);
		RequestRouteMessage m = new RequestRouteMessage(RequesterID);
		m.addAll(path);
		return m;
	}
	
	public void add(Integer e){
		path.add(e);
	}
	
	public void addAll(ArrayList<Integer> al){
		path.addAll(al);
	}
	
	public int getSenderID() {
		return SenderID;
	}
	public void setSenderID(int senderID) {
		SenderID = senderID;
	}
	public int getRequesterID() {
		return RequesterID;
	}
	public void setRequesterID(int requesterID) {
		RequesterID = requesterID;
	}

}
